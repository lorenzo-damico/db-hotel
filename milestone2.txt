GROUP BY

1. Conta gli ospiti raggruppandoli per anno di nascita.

SELECT 
	COUNT(`id`) AS `numero_ospiti`, YEAR(`date_of_birth`) AS `anno_di_nascita`
FROM 
	`ospiti`
GROUP BY 
	YEAR(`date_of_birth`);


2. Somma i prezzi dei pagamenti raggruppandoli per status.

SELECT
    SUM(`price`) AS `totale_pagamenti`, `status`
FROM
    `pagamenti`
GROUP BY
	`status`;

3. Conta quante volte è stata prenotata ogni stanza.

SELECT
    COUNT(`id`) AS `numero_prenotazioni`, `stanza_id`
FROM
    `prenotazioni`
GROUP BY
	`stanza_id`;

4. Fai una analisi per vedere se ci sono ore in cui le prenotazioni sono più frequenti.

SELECT
    COUNT(`id`) AS `numero_prenotazioni`, HOUR(`created_at`)
FROM
    `prenotazioni`
GROUP BY
	HOUR(`created_at`)
ORDER BY 
	`numero_prenotazioni` DESC;

5. Quante prenotazioni ha fatto l’ospite che ha fatto più prenotazioni?

SELECT
    COUNT(`id`) AS `numero_prenotazioni`, `ospite_id`
FROM
    `prenotazioni_has_ospiti`
GROUP BY 
    `ospite_id`
ORDER BY 
    `numero_prenotazioni` DESC
LIMIT
    1;


JOIN

1. Come si chiamano gli ospiti che hanno fatto più di due prenotazioni?

SELECT
    COUNT(prenotazioni_has_ospiti.ospite_id) AS `totale_prenotazioni`, ospiti.name
FROM
    `prenotazioni_has_ospiti`
INNER JOIN
	`ospiti`
ON
	prenotazioni_has_ospiti.ospite_id = ospiti.id
GROUP BY
    	prenotazioni_has_ospiti.ospite_id
HAVING
	`totale_prenotazioni` > 2;

2. Stampare tutti gli ospiti per ogni prenotazione

SELECT
    *
FROM
    `prenotazioni_has_ospiti`
INNER JOIN
	`ospiti`
ON
	prenotazioni_has_ospiti.ospite_id = ospiti.id;

3. Stampare Nome, Cognome, Prezzo e Pagante per tutte le prenotazioni fatte a Maggio 2018

SELECT
    ospiti.name, ospiti.lastname, pagamenti.price, paganti.name, paganti.lastname
FROM
    `prenotazioni`
INNER JOIN
	`prenotazioni_has_ospiti`
ON
	prenotazioni_has_ospiti.prenotazione_id = prenotazioni.id
INNER JOIN
	`ospiti`
ON
	ospiti.id = prenotazioni_has_ospiti.ospite_id
INNER JOIN
	`pagamenti`
ON
	pagamenti.prenotazione_id = prenotazioni.id
INNER JOIN
	`paganti`
ON
	paganti.id = pagamenti.pagante_id
WHERE
	YEAR(prenotazioni.created_at) = 2018
AND
	MONTH(prenotazioni.created_at) = 05;

4. Fai la somma di tutti i prezzi delle prenotazioni per le stanze del primo piano

SELECT
    SUM(pagamenti.price) AS `totale_pagamenti`
FROM
    `prenotazioni`
INNER JOIN `stanze` ON stanze.id = prenotazioni.stanza_id
INNER JOIN `pagamenti` ON pagamenti.prenotazione_id = prenotazioni.id
WHERE
    stanze.floor = 1;

5. Prendi i dati di fatturazione per la prenotazione con id=7

SELECT
    pagamenti.price,
    pagamenti.created_at,
    paganti.name,
    paganti.lastname,
    paganti.address
FROM
    `pagamenti`
INNER JOIN `paganti` ON paganti.id = pagamenti.pagante_id
WHERE
    pagamenti.prenotazione_id = 7;

6. Le stanze sono state tutte prenotate almeno una volta? (Visualizzare le stanze non ancora prenotate)

SELECT
    *
FROM
    `stanze`
LEFT JOIN `prenotazioni` ON stanze.id = prenotazioni.stanza_id
WHERE
    prenotazioni.stanza_id IS NULL;
